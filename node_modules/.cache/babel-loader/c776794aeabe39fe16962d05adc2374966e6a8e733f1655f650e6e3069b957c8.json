{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\OneDrive\\\\Desktop\\\\React\\\\to-do\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Wrapper from './components/Wrapper.js';\nimport './components/Addnote.css';\nimport './note.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [taskList, setTaskList] = useState([{\n    task: \"\"\n  }]);\n  const handleChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const list = {\n      ...taskList\n    };\n    list[index][name] = value;\n    setTaskList(list);\n  };\n  const handleClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setTaskList([...taskList, {\n      task: \"\"\n    }]);\n    {\n      console.log(taskList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: taskList.map((taskname, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: taskList.length - 1 === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"text-box\",\n            name: \"message\",\n            onChange: handleChange,\n            value: taskname.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit-btn\",\n            onClick: e => handleClick(e, index),\n            children: \"Add note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t/ShDt9a2F1r+JJDUeyf9ylPvqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Wrapper","React","useState","jsxDEV","_jsxDEV","App","_s","taskList","setTaskList","task","handleChange","event","index","name","value","target","list","handleClick","console","log","className","children","map","taskname","length","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","_c","$RefreshReg$"],"sources":["C:/Users/Dhruv/OneDrive/Desktop/React/to-do/to-do/src/App.js"],"sourcesContent":["import Wrapper from './components/Wrapper.js';\nimport './components/Addnote.css'\nimport './note.css'\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const[taskList, setTaskList] = useState([\n    {task: \"\"}\n  ]);\n\n  const handleChange = (event,index) => {\n    const {name,value} = event.target;\n    const list = {...taskList};\n    list[index][name] = value;\n    setTaskList(list);\n  };\n\n  const handleClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setTaskList([...taskList, {task: \"\"}])\n    {console.log(taskList)}\n  };\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n          {taskList.map((taskname,index) => (\n            <div>\n              {taskList.length - 1 === index && (\n                <div>\n                  <input type=\"text\" id=\"text-box\" name=\"message\" onChange={handleChange} value={taskname.task} />\n                  <button id = \"submit-btn\" onClick={(e) => handleClick(e,index)}>Add note</button>\n                </div>\n              )\n              }\n              \n            </div>\n          ))}\n          \n        \n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAO,0BAA0B;AACjC,OAAO,YAAY;AACnB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACtC;IAACO,IAAI,EAAE;EAAE,CAAC,CACX,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAACC,KAAK,KAAK;IACpC,MAAM;MAACC,IAAI;MAACC;IAAK,CAAC,GAAGH,KAAK,CAACI,MAAM;IACjC,MAAMC,IAAI,GAAG;MAAC,GAAGT;IAAQ,CAAC;IAC1BS,IAAI,CAACJ,KAAK,CAAC,CAACC,IAAI,CAAC,GAAGC,KAAK;IACzBN,WAAW,CAACQ,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAACE,IAAI,EAAE;IAAE,CAAC,CAAC,CAAC;IACtC;MAACS,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;IAAA;EACxB,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA,CAACJ,OAAO;MAAAqB,QAAA,EACHd,QAAQ,CAACe,GAAG,CAAC,CAACC,QAAQ,EAACX,KAAK,kBAC3BR,OAAA;QAAAiB,QAAA,EACGd,QAAQ,CAACiB,MAAM,GAAG,CAAC,KAAKZ,KAAK,iBAC5BR,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAOqB,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,UAAU;YAACb,IAAI,EAAC,SAAS;YAACc,QAAQ,EAAEjB,YAAa;YAACI,KAAK,EAAES,QAAQ,CAACd;UAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAChG3B,OAAA;YAAQsB,EAAE,EAAG,YAAY;YAACM,OAAO,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,EAACrB,KAAK,CAAE;YAAAS,QAAA,EAAC;UAAQ;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEpF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAACzB,EAAA,CAtCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}