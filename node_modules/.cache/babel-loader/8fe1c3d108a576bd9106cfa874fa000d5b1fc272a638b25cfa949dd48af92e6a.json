{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\OneDrive\\\\Desktop\\\\React\\\\to-do\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Wrapper from './components/Wrapper.js';\nimport Note from './components/Note.js';\nimport './components/Addnote.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [taskList, setTaskList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [updated, setUpdated] = useState(message);\n  const handleChange = (event, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = {\n      ...taskList\n    };\n    list[index][name] = value;\n    setTaskList(list);\n  };\n  const handleClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setUpdated(message);\n    setTaskList([...taskList, {\n      task: updated\n    }]);\n    setMessage(\"\");\n    {\n      console.log(taskList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [taskList.map((taskname, index) => /*#__PURE__*/_jsxDEV(Note, {\n        keyName: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"text-box\",\n        name: \"message\",\n        onChange: handleChange,\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit-btn\",\n        onClick: handleClick,\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wQVETiXsh+220zAoU0QH6Yxz5yM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Wrapper","Note","React","useState","jsxDEV","_jsxDEV","App","_s","taskList","setTaskList","message","setMessage","updated","setUpdated","handleChange","event","index","name","value","e","target","list","handleClick","task","console","log","className","children","map","taskname","keyName","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dhruv/OneDrive/Desktop/React/to-do/to-do/src/App.js"],"sourcesContent":["import Wrapper from './components/Wrapper.js';\nimport Note from './components/Note.js';\nimport './components/Addnote.css'\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const[taskList, setTaskList] = useState([\n  ]);\n\n  const [message, setMessage] = useState('');\n\n  const [updated, setUpdated] = useState(message);\n\n  const handleChange = (event,index) => {\n    const {name,value} = e.target;\n    const list = {...taskList};\n    list[index][name] = value;\n    setTaskList(list);\n  };\n\n  const handleClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setUpdated(message);\n    setTaskList([...taskList, {task: updated}])\n    setMessage(\"\");\n    {console.log(taskList)}\n  };\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n          {taskList.map((taskname,index) => (\n            <Note keyName = {index}>\n              \n            </Note>\n          ))}\n          <input\n            type=\"text\"\n            id=\"text-box\"\n            name=\"message\"\n            onChange={handleChange}\n            value={message}\n          />\n        <button id = \"submit-btn\" onClick={handleClick}>Add note</button>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,0BAA0B;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EACvC,CAAC;EAEF,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACO,OAAO,CAAC;EAE/C,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAACC,KAAK,KAAK;IACpC,MAAM;MAACC,IAAI;MAACC;IAAK,CAAC,GAAGC,CAAC,CAACC,MAAM;IAC7B,MAAMC,IAAI,GAAG;MAAC,GAAGb;IAAQ,CAAC;IAC1Ba,IAAI,CAACL,KAAK,CAAC,CAACC,IAAI,CAAC,GAAGC,KAAK;IACzBT,WAAW,CAACY,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAT,UAAU,CAACH,OAAO,CAAC;IACnBD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAACe,IAAI,EAAEX;IAAO,CAAC,CAAC,CAAC;IAC3CD,UAAU,CAAC,EAAE,CAAC;IACd;MAACa,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC;IAAA;EACxB,CAAC;EAED,oBACEH,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA,CAACL,OAAO;MAAA2B,QAAA,GACHnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,QAAQ,EAACb,KAAK,kBAC3BX,OAAA,CAACJ,IAAI;QAAC6B,OAAO,EAAId;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGxB,CAAC,eACF7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,UAAU;QACbnB,IAAI,EAAC,SAAS;QACdoB,QAAQ,EAAEvB,YAAa;QACvBI,KAAK,EAAER;MAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,eACJ7B,OAAA;QAAQ+B,EAAE,EAAG,YAAY;QAACE,OAAO,EAAEhB,WAAY;QAAAK,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAAC3B,EAAA,CA1CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}